<?php
namespace ThemeMountain;

/**
 * vc_column (themeMountain custom)
 */
$map_data = array(
	'name' => esc_html__( 'Column', 'thememountain-plugin' ),
	'base' => 'vc_column',
	'icon' => 'tm_vc_icon_text_block',
	'is_container' => true,
	'content_element' => false,
	'description' => '',
	'params' => array(
		array(
			'type' => 'dropdown',
			'heading' => esc_html__( 'Horizontal Content Alignment', 'thememountain-plugin' ),
			'param_name' => 'h_text_align',
			'value' => array (
				esc_html__('Left', 'thememountain-plugin') => 'left',
				esc_html__('Center', 'thememountain-plugin') => 'center',
				esc_html__('Right', 'thememountain-plugin') => 'right',
				),
			'std' => 'left',
			'save_always' => true,
			'description' => esc_html__( 'Determines whether the column content should be left, center or right aligned on desktop.', 'thememountain-plugin' ),
		),
		array(
			'type' => 'dropdown',
			'heading' => esc_html__( 'Horizontal Content Alignment on Mobile', 'thememountain-plugin' ),
			'param_name' => 'h_text_align_mobile',
			'value' => array (
				esc_html__('Left', 'thememountain-plugin') => 'left-on-mobile',
				esc_html__('Center', 'thememountain-plugin') => 'center-on-mobile',
				esc_html__('Right', 'thememountain-plugin') => 'right-on-mobile',
				),
			'std' => 'left-on-mobile',
			'save_always' => true,
			'description' => esc_html__( 'Determines whether the column content should be left, center or right aligned on mobile (below 768px).', 'thememountain-plugin' ),
		),
		array(
			'type' => 'dropdown',
			'heading' => esc_html__( 'Vertical Content Alignment', 'thememountain-plugin' ),
			'param_name' => 'v_align',
			'value' => array (
				esc_html__('Vertical Align Top', 'thememountain-plugin') => 'v-align-top',
				esc_html__('Vertical Align Middle', 'thememountain-plugin') => 'v-align-middle',
				esc_html__('Vertical Align Bottom', 'thememountain-plugin') => 'v-align-bottom',
				),
			'std' => 'v-align-middle',
			'save_always' => true,
			'description' => esc_html__( 'Determines whether the column content should be top, middle or bottom aligned within the column. Option only works if the Equalize settings is checked for the parent row.', 'thememountain-plugin' ),
		),
		/** This will implement the freeze plugin for the column, which allows users to make any column sticky while scrolling. This is useful when creating project layouts and they would like to stick say social icons or brief info in a column that remain fixed while the other content scrolls.
		 * Ref: tm_column add a new options under Column Settings > General #821
		 */
		array(
			'type' => 'checkbox',
			'heading' => esc_html__( 'Make Column Sticky', 'thememountain-plugin' ),
			'value' => array( esc_html__( 'Yes', 'thememountain-plugin' ) => 'true' ),
			'param_name' => 'make_column_sticky',
			'std' => '',
			'description' => esc_html__( 'Determines whether the column should become sticky upon scroll.', 'thememountain-plugin' ),
		),
		array(
			'type' => 'textfield',
			'heading' => esc_html__( 'Extra Space Top', 'thememountain-plugin' ),
			'param_name' => 'extra_space_top',
			'value' => '80',
			'dependency' => array('element' => 'make_column_sticky','value'=>'true'),
			'description' => esc_html__( 'Determines how much extra space should be added to the top of the sticky column. Commonly, you would set this to the height of your header so that the sticky column appears below the header.', 'thememountain-plugin' ),
		),
		array(
			'type' => 'textfield',
			'heading' => esc_html__( 'Extra Space Bottom', 'thememountain-plugin' ),
			'param_name' => 'extra_space_bottom',
			'value' => '0',
			'dependency' => array('element' => 'make_column_sticky','value'=>'true'),
			'description' => esc_html__( 'Determines how much extra space should be added to the bottom of the sticky column.', 'thememountain-plugin' ),
		),
		array(
			'type' => 'textfield',
			'heading' => esc_html__( 'Push Section', 'thememountain-plugin' ),
			'param_name' => 'push_section',
			'value' => '.footer',
			'dependency' => array('element' => 'make_column_sticky','value'=>'true'),
			'description' => esc_html__( 'Determines which section in your layout should force the sticky column to unstick from its position when it reaches the bottom of the column. Accepts IDs and Classes. Default push section is the site footer.', 'thememountain-plugin' ),
		),
		array(
			'type' => 'textfield',
			'heading' => esc_html__( 'Extra Class Name', 'thememountain-plugin' ),
			'param_name' => 'el_class',
			'description' => esc_html__( 'If you wish to style this component differently, then use the extra class name field to add one or several class names and then refer to it in your css file.', 'thememountain-plugin' ),
		),
		array(
			'type' => 'textfield',
			'heading' => esc_html__( 'ID', 'thememountain-plugin' ),
			'param_name' => 'el_id',
			'description' => esc_html__( 'Give this section a unique ID. This is useful if you want to initiate scroll or link to this section.', 'thememountain-plugin' ),
			),
		// 'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
		array(
			'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
			'type' => 'checkbox',
			'heading' => esc_html__( 'Background color or image', 'thememountain-plugin' ),
			'param_name' => 'use_background',
			'value' => array( esc_html__( 'Yes', 'thememountain-plugin' ) => 'yes' ),
			'std' => '',
			'description' => esc_html__( 'If this option is checked, options for setting background color or adding image will appear.', 'thememountain-plugin' ),
		),
		array(
			'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
			'type' => 'textfield',
			'heading' => esc_html__( 'Box Min Height', 'thememountain-plugin' ),
			'param_name' => 'box_min_height',
			'dependency' => array('element' => 'style','value'=>array('boxed_round','boxed')),
			'description' => '',
		),
    	// background color with gradient support
		array(
			'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
			'type' => 'colorpicker',
			'heading' => esc_html__( 'Background Color', 'thememountain-plugin' ),
			'param_name' => 'background_color',
			'std' => '#FFFFFF',
			'dependency' => array('element' => 'use_background','value'=>'yes'),
			'description' => esc_html__( 'Sets the background color of the row or section block.', 'thememountain-plugin' ),
		),
		array(
			'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
			'type' => 'checkbox',
			'heading' => esc_html__( 'Use gradient', 'thememountain-plugin' ),
			'value' => array( esc_html__( 'Yes', 'thememountain-plugin' ) => 'true' ),
			'param_name' => 'background_use_gradient',
			'std' => '',
			'description' => esc_html__( 'This will create a background image gradient, which means that if you have set an image as a background, the gradient will replace it. If selected, Background Color will be used as the start color for the gradient.', 'thememountain-plugin' ),
			'dependency' => array('element' => 'use_background','value'=> 'yes'),
		),
		array(
			'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
			'type' => 'colorpicker',
			'heading' => esc_html__( 'End Background Color Gradient', 'thememountain-plugin' ),
			'param_name' => 'background_gradient_end_color',
			'std' => '',
			'dependency' => array('element' => 'background_use_gradient','value'=>'true'),
		),
		array(
			'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
			'type' => 'textfield',
			'heading' => esc_html__( 'Angle for the Background Color Gradient', 'thememountain-plugin' ),
			'param_name' => 'background_gradient_angle',
			'description'=> esc_html__( 'Sets the angle of your gradient, acceptable values range from 0-360', 'thememountain-plugin' ),
			'dependency' => array('element' => 'background_use_gradient','value'=>'true'),
		),
		// end background color with gradient support
		array(
			'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
			'type' => 'checkbox',
			'heading' => esc_html__( 'Add Overlay', 'thememountain-plugin' ),
			'param_name' => 'add_overlay',
			'value' => array( esc_html__( 'Yes', 'thememountain-plugin' ) => 'yes' ),
			'std' => '',
			'dependency' => array('element' => 'use_background','value'=>'yes'),
			'description' => '',
		),
    	// Overlay background color with gradient support
		array(
			'group' => 'Design Options',
			'type' => 'colorpicker',
			'heading' => esc_html__( 'Overlay Background Color', 'thememountain-plugin' ),
			'param_name' => 'overlay_background_color',
			'std' => 'rgba(0,0,0,0.3)',
			'description' => '',
			'dependency' => array('element' => 'add_overlay','value'=>'yes'),
			),
		array(
			'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
			'type' => 'checkbox',
			'heading' => esc_html__( 'Use gradient for overlay background', 'thememountain-plugin' ),
			'value' => array( esc_html__( 'Yes', 'thememountain-plugin' ) => 'true' ),
			'param_name' => 'overlay_background_use_gradient',
			'std' => '',
			'description' => esc_html__( 'This will create a background image gradient, which means that if you have set an image as a background, the gradient will replace it. If selected, Background Color will be used as the start color for the gradient.', 'thememountain-plugin' ),
			'dependency' => array('element' => 'add_overlay','value'=>'yes'),
		),
		array(
			'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
			'type' => 'colorpicker',
			'heading' => esc_html__( 'End Overlay Background Color Gradient', 'thememountain-plugin' ),
			'param_name' => 'overlay_background_gradient_end_color',
			'std' => '',
			'dependency' => array('element' => 'overlay_background_use_gradient','value'=>'true'),
		),
		array(
			'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
			'type' => 'textfield',
			'heading' => esc_html__( 'Angle for the Overlay Background Color Gradient', 'thememountain-plugin' ),
			'param_name' => 'overlay_background_gradient_angle',
			'description'=> esc_html__( 'Sets the angle of your gradient, acceptable values range from 0-360', 'thememountain-plugin' ),
			'dependency' => array('element' => 'overlay_background_use_gradient','value'=>'true'),
		),
		/** background image */
		TM_Vc::get_image_selector_vc_field(esc_html__( 'Design Options', 'thememountain-plugin' ),esc_html__( 'Background Image', 'thememountain-plugin'),esc_html__( 'Sets the background image of the column.', 'thememountain-plugin' ),array('element' => 'use_background','value'=>'yes')),
		TM_Vc::get_attach_image_vc_field(esc_html__( 'Design Options', 'thememountain-plugin' )),
		TM_Vc::get_image_url_vc_field(esc_html__( 'Design Options', 'thememountain-plugin' )),
		/* boxed */
		array(
			'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
			'type' => 'dropdown',
			'heading' => esc_html__( 'Colum Styling', 'thememountain-plugin' ),
			'param_name' => 'style',
			'value' => array (
				esc_html__('No styling', 'thememountain-plugin') => '',
				esc_html__('Boxed', 'thememountain-plugin') => 'boxed',
				esc_html__('Box with rounded corners', 'thememountain-plugin') => 'boxed_round',
			),
			'std' => '',
			'description' => esc_html__( 'Wraps a column in a box with hard or rounded corners.', 'thememountain-plugin' ),
		),
		/* dependent on style */
		// tm_column we need to add a few additional options to the column styling option #727
		array(
			'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
			'type' => 'dropdown',
			'heading' => esc_html__( 'Box Size', 'thememountain-plugin' ),
			'param_name' => 'box_size',
			'value' => array(
				esc_html__('Small', 'thememountain-plugin') => 'small',
				esc_html__('Medium', 'thememountain-plugin') => 'medium',
				esc_html__('Large', 'thememountain-plugin') => 'large',
				esc_html__('Xlarge', 'thememountain-plugin') => 'xlarge',
				esc_html__('Custom', 'thememountain-plugin') => 'custom',
				),
			'std' => 'medium',
			'dependency' => array('element' => 'style','value'=>array('boxed','boxed_round')),
			'description' => esc_html__( 'Set the box size, small, medium, large or extra large. Determined by content padding.', 'thememountain-plugin' ),
		),
		array(
			'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
			'type' => 'textfield',
			'heading' => esc_html__( 'Box Top/Bottom Padding', 'thememountain-plugin' ),
			'param_name' => 'box_top_bottom_padding',
			'value' => 15,
			'dependency' => array('element' => 'box_size','value'=> 'custom'),
			),
		array(
			'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
			'type' => 'textfield',
			'heading' => esc_html__( 'Box Left/Right Padding', 'thememountain-plugin' ),
			'param_name' => 'box_left_right_padding',
			'value' => 15,
			'dependency' => array('element' => 'box_size','value'=> 'custom'),
			),
		array(
			'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
			'type' => 'colorpicker',
			'heading' => esc_html__( 'Box Background Color', 'thememountain-plugin' ),
			'param_name' => 'box_background_color',
			'std' => '#fff',
			'dependency' => array('element' => 'style','value'=>array('boxed','boxed_round')),
			),
		array(
			'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
			'type' => 'colorpicker',
			'heading' => esc_html__( 'Box Background Hover color', 'thememountain-plugin' ),
			'param_name' => 'box_background_color_hover',
			'std' => '#fff',
			'dependency' => array('element' => 'style','value'=>array('boxed','boxed_round')),
			),
		array(
			'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
			'type' => 'colorpicker',
			'heading' => esc_html__( 'Box Border Color', 'thememountain-plugin' ),
			'param_name' => 'box_border_color',
			'std' => '#f4f4f4',
			'dependency' => array('element' => 'style','value'=>array('boxed','boxed_round')),
			),
		array(
			'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
			'type' => 'colorpicker',
			'heading' => esc_html__( 'Box Border Hover Color', 'thememountain-plugin' ),
			'param_name' => 'box_border_color_hover',
			'std' => '#f4f4f4',
			'dependency' => array('element' => 'style','value'=>array('boxed','boxed_round')),
			),
		// Box Title Color
		array(
			'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
			'type' => 'colorpicker',
			'heading' => esc_html__( 'Box Title Color', 'thememountain-plugin' ),
			'param_name' => 'box_title_color',
			'std' => '',
			'dependency' => array('element' => 'style','value'=>array('boxed','boxed_round')),
		),
		array(
			'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
			'type' => 'colorpicker',
			'heading' => esc_html__( 'Box Title Hover Color', 'thememountain-plugin' ),
			'param_name' => 'box_title_color_hover',
			'std' => '',
			'dependency' => array('element' => 'style','value'=>array('boxed','boxed_round')),
		),
		// Box Text Color
		array(
			'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
			'type' => 'colorpicker',
			'heading' => esc_html__( 'Box Text Color', 'thememountain-plugin' ),
			'param_name' => 'box_text_color',
			'std' => '',
			'dependency' => array('element' => 'style','value'=>array('boxed','boxed_round')),
			),
		array(
			'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
			'type' => 'colorpicker',
			'heading' => esc_html__( 'Box Text Hover Color', 'thememountain-plugin' ),
			'param_name' => 'box_text_color_hover',
			'std' => '',
			'dependency' => array('element' => 'style','value'=>array('boxed','boxed_round')),
			),
		array(
			'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
			'type' => 'checkbox',
			'heading' => esc_html__( 'Box Shadow', 'thememountain-plugin' ),
			'value' => array( esc_html__( 'Yes', 'thememountain-plugin' ) => 'true' ),
			'param_name' => 'box_shadow',
			'std' => '',
			'dependency' => array('element' => 'style','value'=>array('boxed','boxed_round')),
			),
		array(
			'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
			'type' => 'checkbox',
			'heading' => esc_html__( 'Box Shadow on Hover', 'thememountain-plugin' ),
			'value' => array( esc_html__( 'Yes', 'thememountain-plugin' ) => 'true' ),
			'param_name' => 'box_shadow_hover',
			'std' => '',
			'dependency' => array('element' => 'style','value'=>array('boxed','boxed_round')),
			),
		/* Column Alignment */
		array(
			'group' => esc_html__( 'Column Alignment', 'thememountain-plugin' ),
			'type' => 'dropdown',
			'heading' => esc_html__( 'Column Offset', 'thememountain-plugin' ),
			'param_name' => 'column_offset',
			'value' => TM_Vc::$vc_elements_variable['column_offset'],
			'description' => esc_html__( 'Column Offset.', 'thememountain-plugin' ),
			'std' => '1/1',
			'description' => '',
		),
		array(
			'group' => esc_html__( 'Column Alignment', 'thememountain-plugin' ),
			'type' => 'dropdown',
			'heading' => esc_html__( 'Column Push', 'thememountain-plugin' ),
			'param_name' => 'column_push',
			'value' => TM_Vc::$vc_elements_variable['column_push'],
			'description' => esc_html__( 'Column Push.', 'thememountain-plugin' ),
			'std' => '1/1',
			'description' => '',
		),
		array(
			'group' => esc_html__( 'Column Alignment', 'thememountain-plugin' ),
			'type' => 'dropdown',
			'heading' => esc_html__( 'Column Pull', 'thememountain-plugin' ),
			'param_name' => 'column_pull',
			'value' => TM_Vc::$vc_elements_variable['column_pull'],
			'description' => esc_html__( 'Column Pull.', 'thememountain-plugin' ),
			'std' => '1/1',
			'description' => '',
		),
		// 'group' => esc_html__( 'Animation', 'thememountain-plugin' ),
		array(
			'group' => esc_html__( 'Animation', 'thememountain-plugin' ),
			'type' => 'dropdown',
			'heading' => esc_html__( 'Column Animation', 'thememountain-plugin' ),
			'param_name' => 'column_animation',
			'value' => array(
				esc_html__('None', 'thememountain-plugin') => '',
				esc_html__('Animate in on scroll', 'thememountain-plugin') => 'animation_on_scroll',
				esc_html__('Parallax on scroll', 'thememountain-plugin') => 'parallax_on_scroll',
				),
			'std' => '',
			'description' => esc_html__( 'Determines how the column gets animated.', 'thememountain-plugin' ),
		),
		array(
			'group' => esc_html__( 'Animation', 'thememountain-plugin' ),
			'type' => 'dropdown',
			'heading' => esc_html__( 'Animation Type', 'thememountain-plugin' ),
			'param_name' => 'animation',
			'value' => TM_Vc::$vc_elements_variable['animation_withtout_none'],
			'std' => 'fadeIn',
			'dependency' => array('element' => 'column_animation','value' => 'animation_on_scroll'),
			'description' => esc_html__( 'Determines the type of animation that will be applied to the column.', 'thememountain-plugin' ),
		),
		array(
			'group' => esc_html__( 'Animation', 'thememountain-plugin' ),
			'type' => 'textfield',
			'heading' => esc_html__( 'Animation Duration', 'thememountain-plugin' ),
			'param_name' => 'duration',
			'value' => '1000',
			'dependency' => array('element' => 'column_animation','value' => 'animation_on_scroll'),
			'description' => esc_html__( 'How long the animation should be. Expressed in milliseconds i.e. 1000 represents 1 second.', 'thememountain-plugin' ),
		),
		array(
			'group' => esc_html__( 'Animation', 'thememountain-plugin' ),
			'type' => 'textfield',
			'heading' => esc_html__( 'Animation Delay', 'thememountain-plugin' ),
			'param_name' => 'delay',
			'value' => '0',
			'dependency' => array('element' => 'column_animation','value' => 'animation_on_scroll'),
			'description' => esc_html__( 'How long before the animation should begin upon entering the viewport. Expressed in milliseconds i.e. 100 represents 0.1 second.', 'thememountain-plugin' ),
		),
		array(
			'group' => esc_html__( 'Animation', 'thememountain-plugin' ),
			'type' => 'textfield',
			'heading' => esc_html__( 'Animation Threshold', 'thememountain-plugin' ),
			'param_name' => 'threshold',
			'value' => '0.5',
			'dependency' => array('element' => 'column_animation','value' => 'animation_on_scroll'),
			'description' => esc_html__( 'Represents what percentage of the element should be visible in the viewport before animation begins. Expressed as a decimal i.e. i.e. 0.5 represents 50%.', 'thememountain-plugin' ),
		),
		/** parallax animation office*/
		array(
			'group' => esc_html__( 'Animation', 'thememountain-plugin' ),
			'type' => 'dropdown',
			'heading' => esc_html__( 'Parallax Speed', 'thememountain-plugin' ),
			'param_name' => 'parallax_speed',
			'value' => array(
				'0.1' => '0.1',
				'0.15' => '0.15',
				'0.2' => '0.2',
				'0.25' => '0.25',
				'0.3' => '0.3',
				'0.35' => '0.35',
				'0.4' => '0.4',
				'0.45' => '0.45',
				'0.5' => '0.5',
				'0.55' => '0.55',
			),
			'std' => '0.1',
			'dependency' => array('element' => 'column_animation','value' => 'parallax_on_scroll'),
			'description' => esc_html__( 'Determines the parallax speed of the column.', 'thememountain-plugin' ),
		),
		array(
			'group' => esc_html__( 'Animation', 'thememountain-plugin' ),
			'type' => 'dropdown',
			'heading' => esc_html__( 'Rotation on Scroll', 'thememountain-plugin' ),
			'param_name' => 'rotation_scroll',
			'value' => array(
				esc_html__('None', 'thememountain-plugin') => '',
				esc_html__('Clockwise', 'thememountain-plugin') => 'clockwise',
				esc_html__('Anticlockwise', 'thememountain-plugin') => 'anticlockwise',
			),
			'std' => '',
			'dependency' => array('element' => 'column_animation','value' => 'parallax_on_scroll'),
			'description' => esc_html__( 'Determines the parallax speed of the column.', 'thememountain-plugin' ),
		),
		array(
			'group' => esc_html__( 'Animation', 'thememountain-plugin' ),
			'type' => 'checkbox',
			'heading' => esc_html__( 'Fade on Scroll', 'thememountain-plugin' ),
			'value' => array( esc_html__( 'Yes', 'thememountain-plugin' ) => 'true' ),
			'param_name' => 'fade_on_scroll',
			'std' => '',
			'dependency' => array('element' => 'column_animation','value' => 'parallax_on_scroll'),
			'description' => esc_html__( 'Determines the column should fade upon scroll.', 'thememountain-plugin' ),
			),
	),
	'js_view' => 'VcColumnExtendedView'
);

// vc_column
vc_map($map_data);

// vc_column_inner
$map_data['base'] = 'vc_column_inner';
$map_data['as_parent'] = array('except' => 'vc_row,tm_aux_button,tm_slider_button,tm_aux_caption,tm_slider_caption,tm_aux_icon,tm_slider_icon');
vc_map($map_data);
