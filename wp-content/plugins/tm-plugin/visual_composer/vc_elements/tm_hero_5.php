<?php
use ThemeMountain\TM_Vc as TM_Vc;
/**
 * ThemeMountain Accordion VC Element Map
 */
if (class_exists( 'Vc_Manager' )) {
	vc_map( array(
		'name' => esc_html__( 'Split Hero Block', 'thememountain-plugin' ),
		'category' => esc_html__( 'ThemeMountain', 'thememountain-plugin' ),
		'base' => 'tm_hero_5',
		'icon' => 'tm_vc_icon_hero-5',
		'is_container' => true,
		'show_settings_on_create' => true,
		'description' => esc_html__( 'hero-5', 'thememountain-plugin' ),
		'params' => array(
			array(
				'type' => 'dropdown',
				'heading' => esc_html__( 'Height', 'thememountain-plugin' ),
				'param_name' => 'height',
				'value' => array(
					esc_html__( 'Small', 'thememountain-plugin' ) => '',
					esc_html__( 'Window height', 'thememountain-plugin' ) => 'window_height',
					esc_html__( 'Auto', 'thememountain-plugin' ) => 'auto',
					esc_html__( 'Custom', 'thememountain-plugin' ) => 'custom',
					),
				'std' => '',
				'description'=> esc_html__( 'Sets the hero section height to either Small, Window Height, Auto or to Custom.', 'thememountain-plugin' ),
				),
			array(
				'type' => 'textfield',
				'heading' => esc_html__( 'Custom Height', 'thememountain-plugin' ),
				'param_name' => 'height_custom',
				'dependency' => array('element' => 'height','value'=>'custom'),
				'value' => '400',
				'description'=> esc_html__( 'Allows you to set your preferred height. If you like to enter the value as pixels, it should be i.e. 400.', 'thememountain-plugin' ),
				),
			array(
				'type' => 'dropdown',
				'heading' => esc_html__( 'Media Content Type', 'thememountain-plugin' ),
				'param_name' => 'media_content_type',
				'value' => array(
					esc_html__( 'Image', 'thememountain-plugin' ) => 'image',
					esc_html__( 'Vimeo Video', 'thememountain-plugin' ) => 'vimeo',
					esc_html__( 'YouTube Video', 'thememountain-plugin' ) => 'youtube',
					esc_html__( 'Other video', 'thememountain-plugin' ) => 'video',
					esc_html__( 'Map', 'thememountain-plugin' ) => 'map',
					),
				'std' => 'image',
				'save_always' => true,
				'description' => esc_html__( 'Determines the hero 5 media type for the media column.', 'thememountain-plugin' ),
				),
			array(
				'type' => 'textfield',
				'heading' => esc_html__( 'Media Content Vimeo ID', 'thememountain-plugin' ),
				'param_name' => 'video_vimeo_id',
				'value' => '',
				'description' => esc_html__( 'This is where you enter the Vimeo video ID, which generally look something like this:
					https://vimeo.com/46697798.', 'thememountain-plugin' ),
				'dependency' => array('element' => 'media_content_type','value'=>'vimeo'),
				),
			array(
				'type' => 'textfield',
				'heading' => esc_html__( 'Media Content Youtube ID', 'thememountain-plugin' ),
				'param_name' => 'video_youtube_id',
				'value' => '',
				'description' => esc_html__( 'This is where you enter the YouTube video ID, which generally look something like this: https://www.youtube.com/watch?v=bPg4tk7VFR0.', 'thememountain-plugin' ),
				'dependency' => array('element' => 'media_content_type','value'=>'youtube'),
				),
			array(
				'type' => 'textfield',
				'heading' => esc_html__( 'Media Content Video URL', 'thememountain-plugin' ),
				'param_name' => 'video_url',
				'value' => '',
				'description' => '',
				'dependency' => array('element' => 'media_content_type','value'=>'video'),
				),
			array(
				'type' => 'textfield',
				'heading' => esc_html__( 'Media Content Video URL Parameters', 'thememountain-plugin' ),
				'param_name' => 'video_url_parameters',
				'description' => '',
				'dependency' => array('element' => 'media_content_type','value'=>array('vimeo','youtube','video')),
				),
			// Image
			ThemeMountain\TM_Vc::get_image_selector_vc_field('',esc_html__( 'Media Content Image', 'thememountain-plugin'),esc_html__( 'Upload media column background image.', 'thememountain-plugin' ),array('element' => 'media_content_type','value'=>'image')),
			ThemeMountain\TM_Vc::get_attach_image_vc_field(),
			ThemeMountain\TM_Vc::get_image_url_vc_field(),
			// tm_hero_5 add option to add button to media column #987
			array(
				'type' => 'dropdown',
				'heading' => esc_html__( 'Media Column Link', 'thememountain-plugin' ),
				'param_name' => 'media_column_link',
				'value' => array(
					esc_html__( 'None', 'thememountain-plugin' ) => '',
					esc_html__( 'Button', 'thememountain-plugin' ) => 'button',
					esc_html__( 'Icon', 'thememountain-plugin' ) => 'icon',
				),
				'std' => '',
				'description' => esc_html__( 'Description: Determines whether a media column links should be added to the media column.', 'thememountain-plugin' ),
				'dependency' => array('element' => 'media_content_type','value'=>'image'),
				),
			// fields for Media Content Type
			array(
				'type' => 'dropdown',
				'heading' => esc_html__( 'Link to', 'thememountain-plugin' ),
				'param_name' => 'link_to',
				'value' => array(
					esc_html__( 'Page', 'thememountain-plugin' ) => 'page',
					esc_html__( 'Lightbox', 'thememountain-plugin' ) => 'lightbox',
					esc_html__( 'Section (scroll)', 'thememountain-plugin' ) => 'scroll',
				),
				'std' => 'page',
				'description' => esc_html__( 'Determines what the button or icon link should link to, either: page, lightbox or scroll to section. Here is a breakdown of each and their dependent options.', 'thememountain-plugin' ),
				'dependency' => array('element' => 'media_column_link','value'=>array('button','icon')),
				),
			array(
				'type' => 'iconpicker',
				'heading' => esc_html__( 'Icon', 'thememountain-plugin' ),
				'param_name' => 'icon_id',
				'settings' => array(
					'emptyIcon' => true,
					'type' => 'tm-entypo',
					'iconsPerPage' => 200,
					),
				'std' => '',
				'description' => esc_html__( 'Select the icon to be used.', 'thememountain-plugin' ),
				'dependency' => array('element' => 'media_column_link','value'=>array('button','icon')),
				),
			array(
				'type' => 'dropdown',
				'heading' => esc_html__( 'Button Type', 'thememountain-plugin' ),
				'param_name' => 'button_type',
				'value' => array(
					esc_html__( 'Regular Button', 'thememountain-plugin' ) => '',
					esc_html__( 'App Button', 'thememountain-plugin' ) => 'app',
					),
				'std' => '',
				'description'=> esc_html__( 'This option is ', 'thememountain-plugin' ),
				'dependency' => array('element' => 'media_column_link','value'=>'button'),
				),
			array(
				'type' => 'textfield',
				'heading' => esc_html__( 'Button label', 'thememountain-plugin' ),
				'param_name' => 'button_label',
				'value' => '',
				'description' => esc_html__( 'What the button should say.', 'thememountain-plugin' ),
				'dependency' => array('element' => 'media_column_link','value'=>'button'),
				),
			array(
				'type' => 'textfield',
				'heading' => esc_html__( 'URL', 'thememountain-plugin' ),
				'param_name' => 'link_url',
				'value' => '',
				'description' => esc_html__( 'The URL of the page to which the icon should link to. Or if this is for scroll to section. the section ID that the icon should link to. For the link to initiate a scroll to a given section you need to specify ID as follow: #section. Remember to also give the section in quesiton the same ID.', 'thememountain-plugin' ),
				'dependency' => array('element' => 'link_to','value'=>array('scroll','page')),
				),
			array(
				'type' => 'dropdown',
				'heading' => esc_html__( 'Link Target', 'thememountain-plugin' ),
				'param_name' => 'link_target',
				'value' => array(
					esc_html__( 'Same Window', 'thememountain-plugin' ) => '_self',
					esc_html__( 'Blank', 'thememountain-plugin' ) => '_blank',
					),
				'std' => '_self',
				'description' => esc_html__( 'Whether the page should open in the same window, new tab or in a new window.', 'thememountain-plugin' ),
				'dependency' => array('element' => 'link_to','value'=>'page'),
				),
			array(
				'type' => 'dropdown',
				'heading' => esc_html__( 'Lightbox Media Type', 'thememountain-plugin' ),
				'param_name' => 'lightbox_media_type',
				'value' => array(
					esc_html__( 'Image', 'thememountain-plugin' ) => 'image',
					esc_html__( 'Vimeo Video', 'thememountain-plugin' ) => 'vimeo',
					esc_html__( 'YouTube Video', 'thememountain-plugin' ) => 'youtube',
					esc_html__( 'Other video', 'thememountain-plugin' ) => 'video',
					),
				'std' => 'image',
				'dependency' => array('element' => 'link_to','value'=>'lightbox'),
				),
			// Lightbox Image
			ThemeMountain\TM_Vc::get_image_selector_vc_field('',esc_html__( 'Image for Lightbox', 'thememountain-plugin'),'',array('element' => 'lightbox_media_type','value'=>'image'),'lightbox_image_source'),
			ThemeMountain\TM_Vc::get_attach_image_vc_field('','','','lightbox_image_id','lightbox_image_source'),
			ThemeMountain\TM_Vc::get_image_url_vc_field('','','','lightbox_image_url','lightbox_image_source'),
			array(
				'type' => 'checkbox',
				'heading' => esc_html__( 'Lightbox Toolbar Zoom Button', 'thememountain-plugin' ),
				'param_name' => 'lightbox_toolbar_zoom_button',
				'value' => array( esc_html__( 'Yes', 'thememountain-plugin' ) => 'true' ),
				'std' => '',
				'description' => esc_html__( 'Whether the lightbox media should be zoomable.', 'thememountain-plugin' ),
				'dependency' => array('element' => 'lightbox_media_type','value'=>array('vimeo','youtube','video')),
				),
			array(
				'type' => 'checkbox',
				'heading' => esc_html__( 'Lightbox Toolbar Share Button', 'thememountain-plugin' ),
				'param_name' => 'lightbox_toolbar_share_buttons',
				'value' => array( esc_html__( 'Yes', 'thememountain-plugin' ) => 'true' ),
				'std' => '',
				'description' => esc_html__( 'Whether the lightbox media should be sharable through Facebook, Twitter and Google+.', 'thememountain-plugin' ),
				'dependency' => array('element' => 'lightbox_media_type','value'=>array('vimeo','youtube','video')),
				),
			array(
				'type' => 'textfield',
				'heading' => esc_html__( 'Lightbox Caption', 'thememountain-plugin' ),
				'param_name' => 'lightbox_caption',
				'value' => '',
				'description' => esc_html__( 'The lightbox media caption. Leave blank if no caption is wanted.', 'thememountain-plugin' ),
				'dependency' => array('element' => 'link_to','value'=>'lightbox'),
				),
			array(
				'type' => 'textfield',
				'heading' => esc_html__( 'Lightbox Vimeo ID', 'thememountain-plugin' ),
				'param_name' => 'lightbox_video_vimeo_id',
				'value' => '',
				'description' => esc_html__( 'This is where you enter the Vimeo video ID, which generally look something like this:
					https://vimeo.com/46697798.', 'thememountain-plugin' ),
				'dependency' => array('element' => 'lightbox_media_type','value'=>'vimeo'),
				),
			array(
				'type' => 'textfield',
				'heading' => esc_html__( 'Lightbox Youtube ID', 'thememountain-plugin' ),
				'param_name' => 'lightbox_video_youtube_id',
				'value' => '',
				'description' => esc_html__( 'This is where you enter the YouTube video ID, which generally look something like this: https://www.youtube.com/watch?v=bPg4tk7VFR0.', 'thememountain-plugin' ),
				'dependency' => array('element' => 'lightbox_media_type','value'=>'youtube'),
				),
			array(
				'type' => 'textfield',
				'heading' => esc_html__( 'Lightbox Video URL', 'thememountain-plugin' ),
				'param_name' => 'lightbox_video_url',
				'value' => '',
				'description' => '',
				'dependency' => array('element' => 'lightbox_media_type','value'=>'video'),
				),
			array(
				'type' => 'textfield',
				'heading' => esc_html__( 'Lightbox Video URL Parameters', 'thememountain-plugin' ),
				'param_name' => 'lightbox_video_url_parameters',
				'description' => '',
				'dependency' => array('element' => 'lightbox_media_type','value'=>array('vimeo','youtube')),
				),
			// end tm_hero_5 add option to add button to media column #987
			//
			array(
				'type' => 'textarea_html',
				'heading' => esc_html__( 'Hero Content', 'thememountain-plugin' ),
				'param_name' => 'content',
				'description' => esc_html__( 'Hero content goes here.', 'thememountain-plugin' ),
				),
			ThemeMountain\TM_Vc::get_rich_text_editor_background_color_vc_field(),
			// content_media_width
			array(
				'type' => 'dropdown',
				'heading' => esc_html__( 'Content Media Width', 'thememountain-plugin' ),
				'param_name' => 'content_media_width',
				'value' => array(
					esc_html__( 'Split 50/50', 'thememountain-plugin' ) => 'split_50_50',
					esc_html__( 'Split 60/40', 'thememountain-plugin' ) => 'split_60_40',
					esc_html__( 'Split 75/25', 'thememountain-plugin' ) => 'split_75_25',
					),
				'std' => 'split_50_50',
				'description' => esc_html__( 'Determines the hero content/media column split. Possible values include: Split 50/50, Split 60/40, and Split 75/25.', 'thememountain-plugin' ),
				),
			array(
				'type' => 'checkbox',
				'param_name' => 'show_media_on_mobile',
				'value' => array( esc_html__( 'Show Media Column on Mobile', 'thememountain-plugin' ) => 'true' ),
				'std' => 'true',
				'description'=> esc_html__( 'Determines whether the media column will be shown on mobile. If deselected, the media column will be hidden under screen width of 768px.', 'thememountain-plugin' ),
				),
			// extra
			// array(
			// 	'type' => 'textfield',
			// 	'heading' => esc_html__( 'ID', 'thememountain-plugin' ),
			// 	'param_name' => 'el_id',
			// 	),
			array(
				'type' => 'textfield',
				'heading' => esc_html__( 'Extra Class Name', 'thememountain-plugin' ),
				'param_name' => 'el_class',
				'description'=> esc_html__( 'If you wish to style this component differently, then use the extra class name field to add one or several class names and then refer to it in your css file.', 'thememountain-plugin' )
				),
			// design options
			array(
				'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
				'type' => 'dropdown',
				'heading' => esc_html__( 'Media Alignment', 'thememountain-plugin' ),
				'param_name' => 'media_alignment',
				'value' => array(
					esc_html__('Left', 'thememountain-plugin' ) => 'left',
					esc_html__('Right', 'thememountain-plugin' ) => 'right',
					),
				'std' => 'left',
				'description' => esc_html__( 'Determines whether the hero media column should be left or right aligned.', 'thememountain-plugin' ),
				),
			array(
				'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
				'type' => 'dropdown',
				'heading' => esc_html__( 'Content Alignment', 'thememountain-plugin' ),
				'param_name' => 'content_alignment',
				'value' => array(
					esc_html__('Left', 'thememountain-plugin' ) => 'left',
					esc_html__('Right', 'thememountain-plugin' ) => 'right',
					),
				'std' => 'left',
				'description' => esc_html__( 'Determines whether the hero content column should be left or right aligned.', 'thememountain-plugin' ),
				),
			array(
				'group' => 'Design Options',
				'type' => 'colorpicker',
				'heading' => esc_html__( 'Text Color', 'thememountain-plugin' ),
				'param_name' => 'text_color',
				'std' => '#666',
				'description' => '',
				),
			/** Overlay Background Color with gradient support */
			array(
				'group' => 'Design Options',
				'type' => 'colorpicker',
				'heading' => esc_html__( 'Overlay Background Color', 'thememountain-plugin' ),
				'param_name' => 'overlay_background_color',
				'std' => 'rgba(0,0,0,0.3)',
				'description' => '',
				),
			array(
				'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
				'type' => 'checkbox',
				'heading' => esc_html__( 'Use gradient for overlay background', 'thememountain-plugin' ),
				'value' => array( esc_html__( 'Yes', 'thememountain-plugin' ) => 'true' ),
				'param_name' => 'overlay_background_use_gradient',
				'std' => '',
				'description' => esc_html__( 'This will create a background image gradient, which means that if you have set an image as a background, the gradient will replace it. If selected, Background Color will be used as the start color for the gradient.', 'thememountain-plugin' ),
			),
			array(
				'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
				'type' => 'colorpicker',
				'heading' => esc_html__( 'End Overlay Background Color Gradient', 'thememountain-plugin' ),
				'param_name' => 'overlay_background_gradient_end_color',
				'std' => '',
				'dependency' => array('element' => 'overlay_background_use_gradient','value'=>'true'),
			),
			array(
				'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
				'type' => 'textfield',
				'heading' => esc_html__( 'Angle for the Overlay Background Color Gradient', 'thememountain-plugin' ),
				'param_name' => 'overlay_background_gradient_angle',
				'description'=> esc_html__( 'Sets the angle of your gradient, acceptable values range from 0-360', 'thememountain-plugin' ),
				'dependency' => array('element' => 'overlay_background_use_gradient','value'=>'true'),
			),
			/** end Overlay Background Color with gradient support */
			/** tm_hero_5 add option to add button to media column #987 */
			// media_column_link button options
			array(
				'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
				'type' => 'checkbox',
				'heading' => esc_html__( 'Drop Shadow', 'thememountain-plugin' ),
				'param_name' => 'button_drop_shadow',
				'value' => array( esc_html__( 'Yes', 'thememountain-plugin' ) => 'true' ),
				'std' => '',
				'dependency' => array('element' => 'media_column_link','value'=>'button'),
				),
			array(
				'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
				'type' => 'checkbox',
				'heading' => esc_html__( 'Icon Drop Shadow', 'thememountain-plugin' ),
				'param_name' => 'icon_drop_shadow',
				'value' => array( esc_html__( 'Yes', 'thememountain-plugin' ) => 'true' ),
				'std' => '',
				'dependency' => array('element' => 'media_column_link','value'=>'icon'),
				),
			array(
				'group' => 'Design Options',
				'type' => 'dropdown',
				'heading' => esc_html__( 'Button Icon Alignment', 'thememountain-plugin' ),
				'param_name' => 'button_icon_alignment',
				'value' => array(
					esc_html__( 'Icon Left', 'thememountain-plugin' ) => 'left',
					esc_html__( 'Icon Right', 'thememountain-plugin' ) => 'right',
					),
				'std' => 'left',
				'description'=> esc_html__( 'This option is dependant upon General > Icon . Determines whether button icon should be left or right aligned.', 'thememountain-plugin' ),
				'dependency' => array('element' => 'media_column_link','value'=>'button'),
				),
			array(
				'group' => 'Design Options',
				'type' => 'dropdown',
				'heading' => esc_html__( 'Button Size', 'thememountain-plugin' ),
				'param_name' => 'button_button_size',
				'value' => ThemeMountain\TM_Vc::$vc_elements_variable['sizes'],
				'std' => '',
				'description'=> esc_html__( 'Determines whether button should be small, medium, large or extra large in size.', 'thememountain-plugin' ),
				'dependency' => array('element' => 'media_column_link','value'=>'button'),
				),
			array(
				'group' => 'Design Options',
				'type' => 'dropdown',
				'heading' => esc_html__( 'Button Style', 'thememountain-plugin' ),
				'param_name' => 'button_border_style',
				'value' => array(
					esc_html__( 'None', 'thememountain-plugin' ) => '',
					esc_html__( 'Rounded', 'thememountain-plugin' ) => 'rounded',
					esc_html__( 'Pill', 'thememountain-plugin' ) => 'pill',
					),
				'std' => '',
				'description'=> esc_html__( 'Whether button should have sharp corners, rounded corners, or be pill shaped.', 'thememountain-plugin' ),
				'dependency' => array('element' => 'media_column_link','value'=>'button'),
				),
			array(
				'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
				'type' => 'colorpicker',
				'heading' => esc_html__( 'Background Color', 'thememountain-plugin' ),
				'param_name' => 'button_bkg_color',
				'std' => '',
				'dependency' => array('element' => 'media_column_link','value'=>'button'),
				),
			array(
				'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
				'type' => 'colorpicker',
				'heading' => esc_html__( 'Background Color Hover', 'thememountain-plugin' ),
				'param_name' => 'button_bkg_color_hover',
				'std' => '',
				'dependency' => array('element' => 'media_column_link','value'=>'button'),
				),
			array(
				'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
				'type' => 'colorpicker',
				'heading' => esc_html__( 'Border Color', 'thememountain-plugin' ),
				'param_name' => 'button_border_color',
				'std' => '',
				'dependency' => array('element' => 'media_column_link','value'=>'button'),
				),
			array(
				'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
				'type' => 'colorpicker',
				'heading' => esc_html__( 'Border Color Hover', 'thememountain-plugin' ),
				'param_name' => 'button_border_color_hover',
				'std' => '',
				'dependency' => array('element' => 'media_column_link','value'=>'button'),
				),
			array(
				'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
				'type' => 'colorpicker',
				'heading' => esc_html__( 'Button Label Color', 'thememountain-plugin' ),
				'param_name' => 'button_label_color',
				'std' => '',
				'dependency' => array('element' => 'media_column_link','value'=>'button'),
				),
			array(
				'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
				'type' => 'colorpicker',
				'heading' => esc_html__( 'Button Label Color Hover', 'thememountain-plugin' ),
				'param_name' => 'button_label_color_hover',
				'std' => '',
				'dependency' => array('element' => 'media_column_link','value'=>'button'),
				),
			// media_column_link icon
			array(
				'group' => 'Design Options',
				'type' => 'dropdown',
				'heading' => esc_html__( 'Icon Size', 'thememountain-plugin' ),
				'param_name' => 'icon_size',
				'value' => ThemeMountain\TM_Vc::$vc_elements_variable['sizes'],
				'std' => 'medium',
				'description' => esc_html__( 'Determines whether the icon should be small, medium, large or extra large in size.', 'thememountain-plugin' ),
				'dependency' => array('element' => 'media_column_link','value'=>'icon'),
				),
			array(
				'group' => 'Design Options',
				'type' => 'dropdown',
				'heading' => esc_html__( 'Icon Style', 'thememountain-plugin' ),
				'param_name' => 'icon_style',
				'value' => array(
					esc_html__( 'None', 'thememountain-plugin' ) => '',
					esc_html__( 'Boxed Icon', 'thememountain-plugin' ) => 'icon-boxed',
					esc_html__( 'Circled Icon', 'thememountain-plugin' ) => 'icon-circled',
					),
				'std' => '',
				'description' => esc_html__( 'Determines whether icon should have no styling, or whether it should be boxed or circled.', 'thememountain-plugin' ),
				'dependency' => array('element' => 'media_column_link','value'=>'icon'),
				),
			// #987 icon color options
			array(
				'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
				'type' => 'colorpicker',
				'heading' => esc_html__( 'Icon Label Color', 'thememountain-plugin' ),
				'param_name' => 'icon_label_color',
				'std' => '#666',
				'description' => '',
				'dependency' => array('element' => 'media_column_link','value'=>'icon'),
				),
			array(
				'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
				'type' => 'colorpicker',
				'heading' => esc_html__( 'Icon Label Color Hover', 'thememountain-plugin' ),
				'param_name' => 'icon_label_color_hover',
				'std' => '#666',
				'description' => '',
				'dependency' => array('element' => 'media_column_link','value'=>'icon'),
				),
			array(
				'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
				'type' => 'colorpicker',
				'heading' => esc_html__( 'Icon Background Color', 'thememountain-plugin' ),
				'param_name' => 'icon_bkg_color',
				'std' => '#EEE',
				'description' => '',
				'dependency' => array('element' => 'icon_style','value'=>array('icon-boxed','icon-circled')),
				),
			array(
				'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
				'type' => 'colorpicker',
				'heading' => esc_html__( 'Icon Background Color Hover', 'thememountain-plugin' ),
				'param_name' => 'icon_bkg_color_hover',
				'std' => '#D0D0D0',
				'description' => '',
				'dependency' => array('element' => 'icon_style','value'=>array('icon-boxed','icon-circled')),
				),
			array(
				'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
				'type' => 'colorpicker',
				'heading' => esc_html__( 'Icon Border Color', 'thememountain-plugin' ),
				'param_name' => 'icon_border_color',
				'std' => '#EEE',
				'description' => '',
				'dependency' => array('element' => 'icon_style','value'=>array('icon-boxed','icon-circled')),
				),
			array(
				'group' => esc_html__( 'Design Options', 'thememountain-plugin' ),
				'type' => 'colorpicker',
				'heading' => esc_html__( 'Icon Border Color Hover', 'thememountain-plugin' ),
				'param_name' => 'icon_border_color_hover',
				'std' => '#D0D0D0',
				'description' => '',
				'dependency' => array('element' => 'icon_style','value'=>array('icon-boxed','icon-circled')),
				),
			// End #987 icon options
			/** End tm_hero_5 add option to add button to media column #987 */
			// ANIMATION
			// media animation
			array(
				'group' => 'Animation',
				'type' => 'dropdown',
				'heading' => esc_html__( 'Media Animation Type', 'thememountain-plugin' ),
				'param_name' => 'media_animation',
				'value' => ThemeMountain\TM_Vc::$vc_elements_variable['animation'],
				'std' => 'fadeIn',
				'description'=> esc_html__( 'Determines the type of animation that will be applied to the column.', 'thememountain-plugin' ),
				),
			array(
				'group' => 'Animation',
				'type' => 'textfield',
				'heading' => esc_html__( 'Media Animation Duration', 'thememountain-plugin' ),
				'param_name' => 'media_animation_duration',
				'value' => '1000',
				'dependency' => array('element' => 'media_animation','not_empty' => TRUE ),
				'description'=> esc_html__( 'How long the animation should be. Expressed in milliseconds i.e. 1000 represents 1 second.', 'thememountain-plugin' ),
				),
			array(
				'group' => 'Animation',
				'type' => 'textfield',
				'heading' => esc_html__( 'Media Animation Delay', 'thememountain-plugin' ),
				'param_name' => 'media_animation_delay',
				'value' => '0',
				'dependency' => array('element' => 'media_animation','not_empty' => TRUE ),
				'description'=> esc_html__( 'How long before the animation should begin upon entering the viewport. Expressed in milliseconds i.e. 100 represents 0.1 second.', 'thememountain-plugin' ),
				),
			array(
				'group' => esc_html__( 'Animation', 'thememountain-plugin' ),
				'type' => 'textfield',
				'heading' => esc_html__( 'Media Animation Threshold', 'thememountain-plugin' ),
				'param_name' => 'media_animation_threshold',
				'value' => '0.5',
				'dependency' => array('element' => 'media_animation','not_empty' => TRUE ),
				'description' => esc_html__( 'Represents what percentage of the element should be visible in the viewport before animation begins. Expressed as a decimal i.e. i.e. 0.5 represents 50%.', 'thememountain-plugin' ),
			),

			// content animation
			array(
				'group' => 'Animation',
				'type' => 'dropdown',
				'heading' => esc_html__( 'Content Animation Type', 'thememountain-plugin' ),
				'param_name' => 'content_animation',
				'value' => ThemeMountain\TM_Vc::$vc_elements_variable['animation'],
				'std' => 'fadeIn',
				'description'=> esc_html__( 'Determines the type of animation that will be applied to the column.', 'thememountain-plugin' ),
				),
			array(
				'group' => 'Animation',
				'type' => 'textfield',
				'heading' => esc_html__( 'Content Animation Duration', 'thememountain-plugin' ),
				'param_name' => 'content_animation_duration',
				'value' => '1000',
				'dependency' => array('element' => 'content_animation','not_empty' => TRUE ),
				'description'=> esc_html__( 'How long the animation should be. Expressed in milliseconds i.e. 1000 represents 1 second.', 'thememountain-plugin' ),
				),
			array(
				'group' => 'Animation',
				'type' => 'textfield',
				'heading' => esc_html__( 'Content Animation Delay', 'thememountain-plugin' ),
				'param_name' => 'content_animation_delay',
				'value' => '0',
				'dependency' => array('element' => 'content_animation','not_empty' => TRUE ),
				'description'=> esc_html__( 'How long before the animation should begin upon entering the viewport. Expressed in milliseconds i.e. 100 represents 0.1 second.', 'thememountain-plugin' ),
				),
			array(
				'group' => esc_html__( 'Animation', 'thememountain-plugin' ),
				'type' => 'textfield',
				'heading' => esc_html__( 'Animation Threshold', 'thememountain-plugin' ),
				'param_name' => 'content_animation_threshold',
				'value' => '0.5',
				'dependency' => array('element' => 'content_animation','not_empty' => TRUE ),
				'description' => esc_html__( 'Represents what percentage of the element should be visible in the viewport before animation begins. Expressed as a decimal i.e. i.e. 0.5 represents 50%.', 'thememountain-plugin' ),
			),
			/**
			 * MAP
			 */
			// map style
			array(
				'group' => 'Map',
				'type' => 'dropdown',
				'heading' => esc_html__( 'Map Style Type', 'thememountain-plugin' ),
				'param_name' => 'map_style',
				// 'admin_label' => true,
				'value' => array(
					esc_html__( 'Color', 'thememountain-plugin' ) => 'color',
					esc_html__( 'Greyscale', 'thememountain-plugin' ) => 'greyscale',
					),
				'dependency' => array('element' => 'media_content_type','value'=>'map'),
				'std' => 'color',
				'description' => esc_html__( 'Determines whether the map should be shown in color or in greyscale.', 'thememountain-plugin' ),
				),
			// map location 1
			array(
				'group' => 'Map',
				'type' => 'textfield',
				'heading' => esc_html__( 'Coordinates 1', 'thememountain-plugin' ),
				'param_name' => 'map_coordinates_1',
				'dependency' => array('element' => 'media_content_type','value'=>'map'),
				'description'=> esc_html__( 'Enter the map coordinates of the first map marker here. Lat/long should be comma separated i.e. 40.723301,-74.002988.', 'thememountain-plugin' ),
				),
			array(
				'group' => 'Map',
				'type' => 'textfield',
				'heading' => esc_html__( 'Information 1', 'thememountain-plugin' ),
				'param_name' => 'map_info_1',
				'dependency' => array('element' => 'media_content_type','value'=>'map'),
				'description'=> esc_html__( 'Enter the map tooltip information of the first map marker here.', 'thememountain-plugin' )
				),
			array(
				'group' => 'Map',
				'type' => 'attach_image',
				'heading' => esc_html__( 'Map Marker 1', 'thememountain-plugin' ),
				'param_name' => 'map_marker_1',
				'dependency' => array('element' => 'media_content_type','value'=>'map'),
				'description'=> esc_html__( 'Upload the first map marker.', 'thememountain-plugin' )
				),
			// map location 2
			array(
				'group' => 'Map',
				'type' => 'textfield',
				'heading' => esc_html__( 'Coordinates 2', 'thememountain-plugin' ),
				'param_name' => 'map_coordinates_2',
				'dependency' => array('element' => 'media_content_type','value'=>'map'),
				'description'=> esc_html__( 'Enter the map coordinates of the second map marker here. Lat/long should be comma separated i.e. 40.723301,-74.002988.', 'thememountain-plugin' ),
				),
			array(
				'group' => 'Map',
				'type' => 'textfield',
				'heading' => esc_html__( 'Information 2', 'thememountain-plugin' ),
				'param_name' => 'map_info_2',
				'dependency' => array('element' => 'media_content_type','value'=>'map'),
				'description'=> esc_html__( 'Enter the map tooltip information of the second map marker here.', 'thememountain-plugin' )
				),
			array(
				'group' => 'Map',
				'type' => 'attach_image',
				'heading' => esc_html__( 'Marker image 2', 'thememountain-plugin' ),
				'param_name' => 'map_marker_2',
				'dependency' => array('element' => 'media_content_type','value'=>'map'),
				'description'=> esc_html__( 'Upload the second map marker.', 'thememountain-plugin' )
				),
			// zoom level
			array(
				'group' => 'Map',
				'type' => 'dropdown',
				'heading' => esc_html__( 'Zoom level', 'thememountain-plugin' ),
				'param_name' => 'zoom_level',
				'value' => array(
					esc_html__( '0', 'thememountain-plugin' ) => '0',
					esc_html__( '1', 'thememountain-plugin' ) => '1',
					esc_html__( '2', 'thememountain-plugin' ) => '2',
					esc_html__( '3', 'thememountain-plugin' ) => '3',
					esc_html__( '4', 'thememountain-plugin' ) => '4',
					esc_html__( '5', 'thememountain-plugin' ) => '5',
					esc_html__( '6', 'thememountain-plugin' ) => '6',
					esc_html__( '7', 'thememountain-plugin' ) => '7',
					esc_html__( '8', 'thememountain-plugin' ) => '8',
					esc_html__( '9', 'thememountain-plugin' ) => '9',
					esc_html__( '10', 'thememountain-plugin' ) => '10',
					esc_html__( '11', 'thememountain-plugin' ) => '11',
					esc_html__( '12', 'thememountain-plugin' ) => '12',
					esc_html__( '13', 'thememountain-plugin' ) => '13',
					esc_html__( '14', 'thememountain-plugin' ) => '14',
					esc_html__( '15', 'thememountain-plugin' ) => '15',
					esc_html__( '16', 'thememountain-plugin' ) => '16',
					esc_html__( '17', 'thememountain-plugin' ) => '17',
					esc_html__( '18', 'thememountain-plugin' ) => '18',
					esc_html__( '19', 'thememountain-plugin' ) => '19',
					),
				'std' => '16',
				'dependency' => array('element' => 'media_content_type','value'=>'map'),
				'description' => '',
				),
		),
	) );
}

class WPBakeryShortCode_tm_hero_5 extends WPBakeryShortCode {
}
